<bsh>
import android.app.Service;
import android.content.Intent;
import android.net.Uri;
import android.provider.Contacts.People;
import android.provider.Contacts.Phones;
import android.database.Cursor;

service = (Service) server.props.get("serviceContext");

if(Integer.parseInt(android.os.Build.VERSION.SDK) >= 5) {
	String[] contactsColumns = { android.provider.ContactsContract.Data.RAW_CONTACT_ID, android.provider.ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME, android.provider.ContactsContract.CommonDataKinds.StructuredName.HAS_PHONE_NUMBER };
	String[] phonesColumns = { android.provider.ContactsContract.CommonDataKinds.Phone.NUMBER, android.provider.ContactsContract.CommonDataKinds.Phone.TYPE};
    String[] emailsColumns = { android.provider.ContactsContract.CommonDataKinds.Email.ADDRESS, android.provider.ContactsContract.CommonDataKinds.Email.TYPE};

	contactsUri = android.provider.ContactsContract.Data.CONTENT_URI;
	phonesUri = android.provider.ContactsContract.CommonDataKinds.Phone.CONTENT_URI;
	emailsUri = android.provider.ContactsContract.CommonDataKinds.Email.CONTENT_URI;

	curContacts = service.getContentResolver().query(contactsUri, contactsColumns, // Which columns to return
		  android.provider.ContactsContract.CommonDataKinds.StructuredName.MIMETYPE + "=? AND " + android.provider.ContactsContract.CommonDataKinds.StructuredName.HAS_PHONE_NUMBER + " = 1",
		  new String[] { android.provider.ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE },
		  android.provider.ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME + " ASC" // Order-by clause (ascending by name)
    );

	print("[");	  
	if(curContacts .moveToFirst()) {
	do {

        hasNumber = curContacts.getInt(curContacts .getColumnIndex(android.provider.ContactsContract.CommonDataKinds.StructuredName.HAS_PHONE_NUMBER));

        id = curContacts.getString(curContacts .getColumnIndex(android.provider.ContactsContract.Data.RAW_CONTACT_ID));
        name = curContacts.getString(curContacts .getColumnIndex(android.provider.ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME));

        phonesWhere = android.provider.ContactsContract.CommonDataKinds.Phone.RAW_CONTACT_ID + "=" + id;
        curPhones = service.getContentResolver().query(phonesUri, phonesColumns, // Which columns to return
                    phonesWhere, // WHERE clause; which rows to return(all rows)
                    null, // WHERE clause selection arguments (none)
                    android.provider.ContactsContract.CommonDataKinds.Phone.NUMBER + " ASC" // Order-by clause (ascending by name)
                    );

        emailsWhere = android.provider.ContactsContract.CommonDataKinds.Email.RAW_CONTACT_ID + "=" + id;
        curEmails = service.getContentResolver().query(emailsUri, emailsColumns, // Which columns to return
                    emailsWhere, // WHERE clause; which rows to return(all rows)
                    null, // WHERE clause selection arguments (none)
                    android.provider.ContactsContract.CommonDataKinds.Email.ADDRESS + " ASC" // Order-by clause (ascending by name)
        );

    print("\t{\n\t\t\"name\" :\"" + name + "\",\n\t\t\"id\" :\"" + id + "\",\n\t\t\"contactImg\" : \"graphics/seeContactImg.xhtml?contactId=" + id + "\"");

    if (curEmails.moveToFirst()) {
            print(",\n\t\t\"emails\" : [");
            c = 0;
            do {
                email = curEmails.getString(curEmails.getColumnIndex(android.provider.ContactsContract.CommonDataKinds.Email.ADDRESS));

                print("\t\t\t\"" + email + "\"");
                if(!curEmails.isLast()) {
                    print(",");
                }

                c++;
            } while (curEmails.moveToNext());
            print("\t\t]");
        }
        curEmails.close();

        if (curPhones.moveToFirst()) {
            print(",\n\t\t\"phones\" : [");
            c = 0;
            do {
                phoneNo = curPhones.getString(curPhones.getColumnIndex(android.provider.ContactsContract.CommonDataKinds.Phone.NUMBER));
                type = curPhones.getLong(curPhones.getColumnIndex(android.provider.ContactsContract.CommonDataKinds.Phone.TYPE));

                print("\t\t\t\"" + phoneNo + "\"");
                if(!curPhones.isLast()) {
                    print(",");
                }

                c++;
            } while (curPhones.moveToNext());
            print("\t\t]");
        }
        print("\t}");
        if(!curContacts.isLast()) {
            print(",");
        }
        curPhones.close();

	} while(curContacts .moveToNext());
	}
    print("]");	
	curContacts .close();
}

</bsh>
