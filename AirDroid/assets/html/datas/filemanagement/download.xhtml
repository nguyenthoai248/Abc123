<bsh>

    import java.io.File;
    import java.io.FileInputStream;
    import java.util.zip.ZipEntry;
    import java.util.zip.ZipOutputStream;


    //here is the code for the method
    zipDir(dir2zip, zos) {

    try {

    //create a new File object based on the directory we have to zip File
    zipDir = new File(dir2zip);

    //get a listing of the directory content
    dirList = zipDir.list();
    readBuffer = new byte[2156];
    bytesIn = 0;

    //loop through dirList, and zip the files
    for(int i=0; i<dirList.length; i++) {

    f = new File(zipDir, dirList[i]);
    if(f.isDirectory()) {

    //if the File object is a directory, call this
    //function again to add its content recursively
    filePath = f.getPath();
    zipDir(filePath, zos);
    //loop again
    continue;
    }
    //if we reached here, the File object f was not a directory
    //create a FileInputStream on top of f
    fis = new FileInputStream(f);

    //create a new zip entry
    anEntry = new ZipEntry(f.getPath());

    //place the zip entry in the ZipOutputStream object
    zos.putNextEntry(anEntry);

    //now write the content of the file to the ZipOutputStream
    while((bytesIn = fis.read(readBuffer)) != -1) {
    zos.write(readBuffer, 0, bytesIn);
    }
    //close the Stream
    fis.close();
    }
    } catch(Exception e) {
    //handle exception
    }
    }


    try
    {
    //create a ZipOutputStream to zip the data to
    baos = new ByteArrayOutputStream();
    zos = new ZipOutputStream(baos);
    //assuming that there is a directory named inFolder (If there
    //isn't create one) in the same directory as the one the code runs from,
    //call the zipDir method


    name = parameters.get("name");
    path = parameters.get("path");


    zipDir(path, zos);
    //close the stream
    zos.close();


    mime ="application/zip";
    request.responseHeaders.put("Content-disposition", "attachment; filename=\"azerty.zip\"");

    request.sendResponse(baos.toByteArray(), mime);
    request.out.flush();
    request.out.close();

    }
    catch(Exception e)
    {
    //handle exception
    }


</bsh>